async function readFileContent(file) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result);
    reader.onerror = reject;
    reader.readAsText(file);
  });
}

async function generateSummary() {
  const fileInput = document.getElementById("fileInput").files[0];
  const prompt = document.getElementById("promptInput").value;
  const transcript = fileInput ? await readFileContent(fileInput) : "";

  const response = await fetch("/api/summarize", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ transcript, prompt })
  });

  const data = await response.json();
  document.getElementById("summaryBox").value = data.summary || "Error generating summary.";
}

async function sendEmail() {
  const summary = document.getElementById("summaryBox").value;
  const recipients = document.getElementById("recipients").value;

  const response = await fetch("/api/send-email", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ summary, recipients })
  });

  const data = await response.json();
  alert(data.message || "Error sending email.");
}
